name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Запускается при создании тега, начинающегося с 'v'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        
    - name: Install Poetry and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        # Устанавливаем зависимости проекта и dev-зависимости (pyinstaller)
        poetry install --no-interaction --with dev

    - name: Check that PySide6 is installed
      run: |
        poetry run python -c "import PySide6; print('PySide6 version:', PySide6.__version__)"
        poetry run python -c "import PySide6.QtCore, PySide6.QtWidgets; print('Qt modules import OK')"
      
    - name: Build executable with PyInstaller
      run: |
        # Очищаем предыдущие сборки
        rmdir /s /q dist || true
        rmdir /s /q build || true
        poetry run pyinstaller --noconfirm --clean SalaryReader.spec
        
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Автоматически собранный релиз ${{ github.ref_name }}
          
          ## Изменения
          - Обновления приложения
          - Исправления ошибок
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/SalaryReader.exe
        asset_name: SalaryReader.exe
        asset_content_type: application/octet-stream
